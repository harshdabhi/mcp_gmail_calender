{"spans": [{"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "JXYxRwWMuRA=", "trace_state": "", "parent_span_id": "", "name": "LangGraph", "start_time_unix_nano": 1749854161999653000, "end_time_unix_nano": 1749854169571930000, "attributes": {"mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"role\": \"user\", \"content\": \"fetch subjects of 2 unread emails\"}]}", "mlflow.spanType": "\"CHAIN\""}, "events": [{"time_unix_nano": 1749854169571886, "name": "exception", "attributes": {"exception.message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "exception.type": "APIStatusError", "exception.stacktrace": "Traceback (most recent call last):\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/pregel/__init__.py\", line 2655, in astream\n    async for _ in runner.atick(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/pregel/runner.py\", line 294, in atick\n    await arun_with_retry(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/pregel/retry.py\", line 136, in arun_with_retry\n    return await task.proc.ainvoke(task.input, config)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/utils/runnable.py\", line 676, in ainvoke\n    input = await step.ainvoke(input, config, **kwargs)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/utils/runnable.py\", line 433, in ainvoke\n    ret = await coro\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/prebuilt/chat_agent_executor.py\", line 523, in acall_model\n    response = cast(AIMessage, await model_runnable.ainvoke(state, config))\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 3089, in ainvoke\n    input_ = await coro_with_context(part(), context, create_task=True)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 5444, in ainvoke\n    return await self.bound.ainvoke(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 394, in ainvoke\n    llm_result = await self.agenerate_prompt(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 968, in agenerate_prompt\n    return await self.agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 926, in agenerate\n    raise exceptions[0]\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 1094, in _agenerate_with_cache\n    result = await self._agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_groq/chat_models.py\", line 519, in _agenerate\n    response = await self.async_client.create(messages=message_dicts, **params)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/resources/chat/completions.py\", line 750, in create\n    return await self._post(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1716, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1537, in request\n    raise self._make_status_error_from_response(err.response) from None\ngroq.APIStatusError: Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}"}}], "status": {"message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "code": "STATUS_CODE_ERROR"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "2kmV3bk01zE=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "agent_1", "start_time_unix_nano": 1749854162002371000, "end_time_unix_nano": 1749854163786849000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}], \"is_last_step\": false, \"remaining_steps\": 24}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "60Gnf0RFDnE=", "trace_state": "", "parent_span_id": "2kmV3bk01zE=", "name": "call_model_1", "start_time_unix_nano": 1749854162005106000, "end_time_unix_nano": 1749854163783751000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}], \"is_last_step\": false, \"remaining_steps\": 24}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "bo8MLegrLz8=", "trace_state": "", "parent_span_id": "2kmV3bk01zE=", "name": "RunnableSequence_1", "start_time_unix_nano": 1749854162007667000, "end_time_unix_nano": 1749854163782599000, "attributes": {"mlflow.spanOutputs": "{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}], \"is_last_step\": false, \"remaining_steps\": 24}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\", \"checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "58nMDTtGi40=", "trace_state": "", "parent_span_id": "bo8MLegrLz8=", "name": "Prompt_1", "start_time_unix_nano": 1749854162008964000, "end_time_unix_nano": 1749854162009952000, "attributes": {"mlflow.spanOutputs": "[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}], \"is_last_step\": false, \"remaining_steps\": 24}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\", \"checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "qJCT5ZND9/I=", "trace_state": "", "parent_span_id": "bo8MLegrLz8=", "name": "ChatGroq_1", "start_time_unix_nano": 1749854162058334000, "end_time_unix_nano": 1749854163777097000, "attributes": {"options": "{\"stop\": null}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\", \"checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\", \"ls_provider\": \"groq\", \"ls_model_name\": \"qwen/qwen3-32b\", \"ls_model_type\": \"chat\", \"ls_temperature\": 0.6, \"ls_max_tokens\": 4096}", "mlflow.spanInputs": "[[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}]]", "mlflow.chat.tokenUsage": "{\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}", "mlflow.spanOutputs": "{\"generations\": [[{\"text\": \"\", \"generation_info\": {\"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ChatGeneration\", \"message\": {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\"}}]], \"llm_output\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\"}, \"run\": null, \"type\": \"LLMResult\"}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "invocation_params": "{\"_type\": \"groq-chat\", \"stop\": null, \"tools\": [{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"default\": 10, \"type\": \"integer\"}}, \"required\": [\"query\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of attendee email addresses\"}}, \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"type\": \"object\", \"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"New event title\"}, \"description\": {\"type\": \"string\", \"description\": \"New event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"New start time\"}, \"endTime\": {\"type\": \"string\", \"description\": \"New end time\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"New list of attendees\"}}}}, \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"name\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to delete\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the messages\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return messages with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the message\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the message\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"type\": \"object\", \"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return threads with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the thread\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the thread\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"], \"description\": \"The state in which messages should be left after being forwarded\"}}, \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"], \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\"}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"required\": [\"enabled\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"required\": [\"displayLanguage\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"accessWindow\": {\"type\": \"string\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"], \"description\": \"The range of messages which are accessible via POP\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"], \"description\": \"The action that will be executed on a message after it has been fetched via POP\"}}, \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"criteria\": {\"type\": \"object\", \"properties\": {\"from\": {\"type\": \"string\", \"description\": \"The sender's display name or email address\"}, \"to\": {\"type\": \"string\", \"description\": \"The recipient's display name or email address\"}, \"subject\": {\"type\": \"string\", \"description\": \"Case-insensitive phrase in the message's subject\"}, \"query\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies the filter's criteria\"}, \"negatedQuery\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies criteria the message must not match\"}, \"hasAttachment\": {\"type\": \"boolean\", \"description\": \"Whether the message has any attachment\"}, \"excludeChats\": {\"type\": \"boolean\", \"description\": \"Whether the response should exclude chats\"}, \"size\": {\"type\": \"number\", \"description\": \"The size of the entire RFC822 message in bytes\"}, \"sizeComparison\": {\"type\": \"string\", \"enum\": [\"smaller\", \"larger\"], \"description\": \"How the message size in bytes should be in relation to the size field\"}}, \"additionalProperties\": false, \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"properties\": {\"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to add to messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to remove from messages\"}, \"forward\": {\"type\": \"string\", \"description\": \"Email address that the message should be forwarded to\"}}, \"additionalProperties\": false, \"description\": \"Actions to perform on messages matching the criteria\"}}, \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Label IDs to restrict notifications to\"}, \"labelFilterAction\": {\"type\": \"string\", \"enum\": [\"include\", \"exclude\"], \"description\": \"Whether to include or exclude the specified labels\"}}, \"required\": [\"topicName\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}]}", "mlflow.chat.messages": "[{\"role\": \"user\", \"content\": \"fetch subjects of 2 unread emails\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"arguments\": \"{\\\"maxResults\\\": 2, \\\"q\\\": \\\"is:unread\\\"}\"}}]}]", "mlflow.chat.tools": "[{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"query\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"url\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"description\": \"List of attendee email addresses\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}, \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"type\": \"object\", \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"name\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to delete\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to modify\", \"items\": {\"type\": \"string\"}}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the messages\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the messages\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return messages with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the message\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the message\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"type\": \"object\", \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return threads with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the thread\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the thread\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"description\": \"The state in which messages should be left after being forwarded\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"]}}, \"type\": \"object\", \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"]}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"type\": \"object\", \"required\": [\"enabled\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"type\": \"object\", \"required\": [\"displayLanguage\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"properties\": {\"accessWindow\": {\"type\": \"string\", \"description\": \"The range of messages which are accessible via POP\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"]}, \"disposition\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message after it has been fetched via POP\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"]}}, \"type\": \"object\", \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"type\": \"object\", \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"properties\": {\"criteria\": {\"type\": \"object\", \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"description\": \"Actions to perform on messages matching the criteria\"}}, \"type\": \"object\", \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Label IDs to restrict notifications to\", \"items\": {\"type\": \"string\"}}, \"labelFilterAction\": {\"type\": \"string\", \"description\": \"Whether to include or exclude the specified labels\", \"enum\": [\"include\", \"exclude\"]}}, \"type\": \"object\", \"required\": [\"topicName\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}]", "batch_size": "1", "mlflow.spanType": "\"CHAT_MODEL\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "QiWrLFbQmrQ=", "trace_state": "", "parent_span_id": "2kmV3bk01zE=", "name": "should_continue_1", "start_time_unix_nano": 1749854163784943000, "end_time_unix_nano": 1749854163786248000, "attributes": {"mlflow.spanOutputs": "[\"Send(node='tools', arg=[{'name': 'list_messages', 'args': {'maxResults': 2, 'q': 'is:unread'}, 'id': 'b7cjxgrz4', 'type': 'tool_call'}])\"]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}], \"is_last_step\": false, \"remaining_steps\": 24}", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:4ca9489e-08e9-250c-ef7e-5ddf07c623ab\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "LRUNBEd9UJM=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "tools_1", "start_time_unix_nano": 1749854163787804000, "end_time_unix_nano": 1749854165630584000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": null, \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "[{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}]", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 0, false], \"langgraph_checkpoint_ns\": \"tools:c262950f-0a53-a433-4ed4-4765a061328a\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "Hyg67padMSo=", "trace_state": "", "parent_span_id": "LRUNBEd9UJM=", "name": "list_messages", "start_time_unix_nano": 1749854163789020000, "end_time_unix_nano": 1749854165628940000, "attributes": {"mlflow.spanOutputs": "{\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": null, \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "color": "\"green\"", "mlflow.spanInputs": "{\"maxResults\": 2, \"q\": \"is:unread\"}", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 0, false], \"langgraph_checkpoint_ns\": \"tools:c262950f-0a53-a433-4ed4-4765a061328a\", \"checkpoint_ns\": \"tools:c262950f-0a53-a433-4ed4-4765a061328a\"}", "mlflow.spanType": "\"TOOL\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "ane72iLpnD4=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "agent_2", "start_time_unix_nano": 1749854165632460000, "end_time_unix_nano": 1749854167436925000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}], \"is_last_step\": false, \"remaining_steps\": 22}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "1hAqFA+xXzc=", "trace_state": "", "parent_span_id": "ane72iLpnD4=", "name": "call_model_2", "start_time_unix_nano": 1749854165633763000, "end_time_unix_nano": 1749854167431888000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}], \"is_last_step\": false, \"remaining_steps\": 22}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "jPSfPEiGXvc=", "trace_state": "", "parent_span_id": "ane72iLpnD4=", "name": "RunnableSequence_2", "start_time_unix_nano": 1749854165635671000, "end_time_unix_nano": 1749854167430689000, "attributes": {"mlflow.spanOutputs": "{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}], \"is_last_step\": false, \"remaining_steps\": 22}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\", \"checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "wn8LEbvTOQQ=", "trace_state": "", "parent_span_id": "jPSfPEiGXvc=", "name": "Prompt_2", "start_time_unix_nano": 1749854165636886000, "end_time_unix_nano": 1749854165638079000, "attributes": {"mlflow.spanOutputs": "[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}], \"is_last_step\": false, \"remaining_steps\": 22}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\", \"checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "207ZwwZHdKw=", "trace_state": "", "parent_span_id": "jPSfPEiGXvc=", "name": "ChatGroq_2", "start_time_unix_nano": 1749854165641572000, "end_time_unix_nano": 1749854167428759000, "attributes": {"options": "{\"stop\": null}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\", \"checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\", \"ls_provider\": \"groq\", \"ls_model_name\": \"qwen/qwen3-32b\", \"ls_model_type\": \"chat\", \"ls_temperature\": 0.6, \"ls_max_tokens\": 4096}", "mlflow.spanInputs": "[[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}]]", "mlflow.chat.tokenUsage": "{\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}", "mlflow.spanOutputs": "{\"generations\": [[{\"text\": \"\", \"generation_info\": {\"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ChatGeneration\", \"message\": {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\"}}]], \"llm_output\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\"}, \"run\": null, \"type\": \"LLMResult\"}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "invocation_params": "{\"_type\": \"groq-chat\", \"stop\": null, \"tools\": [{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"default\": 10, \"type\": \"integer\"}}, \"required\": [\"query\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of attendee email addresses\"}}, \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"type\": \"object\", \"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"New event title\"}, \"description\": {\"type\": \"string\", \"description\": \"New event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"New start time\"}, \"endTime\": {\"type\": \"string\", \"description\": \"New end time\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"New list of attendees\"}}}}, \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"name\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to delete\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the messages\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return messages with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the message\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the message\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"type\": \"object\", \"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return threads with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the thread\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the thread\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"], \"description\": \"The state in which messages should be left after being forwarded\"}}, \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"], \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\"}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"required\": [\"enabled\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"required\": [\"displayLanguage\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"accessWindow\": {\"type\": \"string\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"], \"description\": \"The range of messages which are accessible via POP\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"], \"description\": \"The action that will be executed on a message after it has been fetched via POP\"}}, \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"criteria\": {\"type\": \"object\", \"properties\": {\"from\": {\"type\": \"string\", \"description\": \"The sender's display name or email address\"}, \"to\": {\"type\": \"string\", \"description\": \"The recipient's display name or email address\"}, \"subject\": {\"type\": \"string\", \"description\": \"Case-insensitive phrase in the message's subject\"}, \"query\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies the filter's criteria\"}, \"negatedQuery\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies criteria the message must not match\"}, \"hasAttachment\": {\"type\": \"boolean\", \"description\": \"Whether the message has any attachment\"}, \"excludeChats\": {\"type\": \"boolean\", \"description\": \"Whether the response should exclude chats\"}, \"size\": {\"type\": \"number\", \"description\": \"The size of the entire RFC822 message in bytes\"}, \"sizeComparison\": {\"type\": \"string\", \"enum\": [\"smaller\", \"larger\"], \"description\": \"How the message size in bytes should be in relation to the size field\"}}, \"additionalProperties\": false, \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"properties\": {\"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to add to messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to remove from messages\"}, \"forward\": {\"type\": \"string\", \"description\": \"Email address that the message should be forwarded to\"}}, \"additionalProperties\": false, \"description\": \"Actions to perform on messages matching the criteria\"}}, \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Label IDs to restrict notifications to\"}, \"labelFilterAction\": {\"type\": \"string\", \"enum\": [\"include\", \"exclude\"], \"description\": \"Whether to include or exclude the specified labels\"}}, \"required\": [\"topicName\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}]}", "mlflow.chat.messages": "[{\"role\": \"user\", \"content\": \"fetch subjects of 2 unread emails\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"arguments\": \"{\\\"maxResults\\\": 2, \\\"q\\\": \\\"is:unread\\\"}\"}}]}, {\"role\": \"tool\", \"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"tool_call_id\": \"b7cjxgrz4\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"wx6jmewxz\", \"type\": \"function\", \"function\": {\"name\": \"get_message\", \"arguments\": \"{\\\"id\\\": \\\"1976b6930ae39214\\\"}\"}}, {\"id\": \"8kz299ksp\", \"type\": \"function\", \"function\": {\"name\": \"get_message\", \"arguments\": \"{\\\"id\\\": \\\"19769d075eb03f2f\\\"}\"}}]}]", "mlflow.chat.tools": "[{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"query\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"url\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"description\": \"List of attendee email addresses\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}, \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"type\": \"object\", \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"name\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to delete\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to modify\", \"items\": {\"type\": \"string\"}}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the messages\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the messages\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return messages with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the message\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the message\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"type\": \"object\", \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return threads with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the thread\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the thread\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"description\": \"The state in which messages should be left after being forwarded\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"]}}, \"type\": \"object\", \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"]}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"type\": \"object\", \"required\": [\"enabled\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"type\": \"object\", \"required\": [\"displayLanguage\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"properties\": {\"accessWindow\": {\"type\": \"string\", \"description\": \"The range of messages which are accessible via POP\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"]}, \"disposition\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message after it has been fetched via POP\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"]}}, \"type\": \"object\", \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"type\": \"object\", \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"properties\": {\"criteria\": {\"type\": \"object\", \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"description\": \"Actions to perform on messages matching the criteria\"}}, \"type\": \"object\", \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Label IDs to restrict notifications to\", \"items\": {\"type\": \"string\"}}, \"labelFilterAction\": {\"type\": \"string\", \"description\": \"Whether to include or exclude the specified labels\", \"enum\": [\"include\", \"exclude\"]}}, \"type\": \"object\", \"required\": [\"topicName\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}]", "batch_size": "1", "mlflow.spanType": "\"CHAT_MODEL\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "vjOyNIgVtYc=", "trace_state": "", "parent_span_id": "ane72iLpnD4=", "name": "should_continue_2", "start_time_unix_nano": 1749854167433754000, "end_time_unix_nano": 1749854167436121000, "attributes": {"mlflow.spanOutputs": "[\"Send(node='tools', arg=[{'name': 'get_message', 'args': {'id': '1976b6930ae39214'}, 'id': 'wx6jmewxz', 'type': 'tool_call'}])\", \"Send(node='tools', arg=[{'name': 'get_message', 'args': {'id': '19769d075eb03f2f'}, 'id': '8kz299ksp', 'type': 'tool_call'}])\"]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}], \"is_last_step\": false, \"remaining_steps\": 22}", "metadata": "{\"langgraph_step\": 3, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:02205d03-c323-add6-3c34-374de3345d33\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "RJsG8KVyjqo=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "tools_2", "start_time_unix_nano": 1749854167438874000, "end_time_unix_nano": 1749854169316072000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": null, \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "[{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}]", "metadata": "{\"langgraph_step\": 4, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 0, false], \"langgraph_checkpoint_ns\": \"tools:0ea19d57-3329-1d9a-8d97-b17036ff9f79\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "8IJlenA77mE=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "tools_3", "start_time_unix_nano": 1749854167439041000, "end_time_unix_nano": 1749854168706096000, "attributes": {"mlflow.spanOutputs": "{\"messages\": [{\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": null, \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}]}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "[{\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}]", "metadata": "{\"langgraph_step\": 4, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 1, false], \"langgraph_checkpoint_ns\": \"tools:2b7d6a72-535a-db9d-4610-8be700c0eb6b\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "LhqW38MFCn8=", "trace_state": "", "parent_span_id": "RJsG8KVyjqo=", "name": "get_message_1", "start_time_unix_nano": 1749854167441583000, "end_time_unix_nano": 1749854169314632000, "attributes": {"mlflow.spanOutputs": "{\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": null, \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "color": "\"green\"", "mlflow.spanInputs": "{\"id\": \"1976b6930ae39214\"}", "metadata": "{\"langgraph_step\": 4, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 0, false], \"langgraph_checkpoint_ns\": \"tools:0ea19d57-3329-1d9a-8d97-b17036ff9f79\", \"checkpoint_ns\": \"tools:0ea19d57-3329-1d9a-8d97-b17036ff9f79\"}", "mlflow.spanType": "\"TOOL\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "sV1a23riwbc=", "trace_state": "", "parent_span_id": "8IJlenA77mE=", "name": "get_message_2", "start_time_unix_nano": 1749854167441750000, "end_time_unix_nano": 1749854168704489000, "attributes": {"mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "color": "\"green\"", "mlflow.spanInputs": "{\"id\": \"19769d075eb03f2f\"}", "metadata": "{\"langgraph_step\": 4, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"__pregel_push\"], \"langgraph_path\": [\"__pregel_push\", 1, false], \"langgraph_checkpoint_ns\": \"tools:2b7d6a72-535a-db9d-4610-8be700c0eb6b\", \"checkpoint_ns\": \"tools:2b7d6a72-535a-db9d-4610-8be700c0eb6b\"}", "mlflow.spanType": "\"TOOL\""}, "events": [{"time_unix_nano": 1749854168704358, "name": "exception", "attributes": {"exception.message": "unhandled errors in a TaskGroup (1 sub-exception)", "exception.type": "ExceptionGroup", "exception.stacktrace": "+ Exception Group Traceback (most recent call last):\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/tools/base.py\", line 853, in arun\n  |     response = await coro_with_context(coro, context)\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/tools/structured.py\", line 110, in _arun\n  |     return await self.coroutine(*args, **kwargs)\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/tools.py\", line 98, in call_tool\n  |     async with create_session(connection) as tool_session:\n  |   File \"/Users/phoenixonwork/anaconda3/lib/python3.10/contextlib.py\", line 217, in __aexit__\n  |     await self.gen.athrow(typ, value, traceback)\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/sessions.py\", line 310, in create_session\n  |     async with _create_stdio_session(\n  |   File \"/Users/phoenixonwork/anaconda3/lib/python3.10/contextlib.py\", line 217, in __aexit__\n  |     await self.gen.athrow(typ, value, traceback)\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/sessions.py\", line 164, in _create_stdio_session\n  |     async with stdio_client(server_params) as (read, write):\n  |   File \"/Users/phoenixonwork/anaconda3/lib/python3.10/contextlib.py\", line 217, in __aexit__\n  |     await self.gen.athrow(typ, value, traceback)\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/mcp/client/stdio/__init__.py\", line 172, in stdio_client\n  |     async with (\n  |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line 772, in __aexit__\n  |     raise BaseExceptionGroup(\n  | exceptiongroup.ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)\n  +-+---------------- 1 ----------------\n    | Exception Group Traceback (most recent call last):\n    |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/mcp/client/stdio/__init__.py\", line 179, in stdio_client\n    |     yield read_stream, write_stream\n    |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/sessions.py\", line 165, in _create_stdio_session\n    |     async with ClientSession(read, write, **(session_kwargs or {})) as session:\n    |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/mcp/shared/session.py\", line 218, in __aexit__\n    |     return await self._task_group.__aexit__(exc_type, exc_val, exc_tb)\n    |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py\", line 772, in __aexit__\n    |     raise BaseExceptionGroup(\n    | exceptiongroup.ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)\n    +-+---------------- 1 ----------------\n      | Traceback (most recent call last):\n      |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/sessions.py\", line 166, in _create_stdio_session\n      |     yield session\n      |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/sessions.py\", line 321, in create_session\n      |     yield session\n      |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_mcp_adapters/tools.py\", line 99, in call_tool\n      |     await tool_session.initialize()\n      |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/mcp/client/session.py\", line 123, in initialize\n      |     result = await self.send_request(\n      |   File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/mcp/shared/session.py\", line 286, in send_request\n      |     raise McpError(response_or_error.error)\n      | mcp.shared.exceptions.McpError: Connection closed\n      +------------------------------------"}}], "status": {"message": "unhandled errors in a TaskGroup (1 sub-exception)", "code": "STATUS_CODE_ERROR"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "+s2VBSUy9AI=", "trace_state": "", "parent_span_id": "JXYxRwWMuRA=", "name": "agent_3", "start_time_unix_nano": 1749854169318011000, "end_time_unix_nano": 1749854169569146000, "attributes": {"mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}], \"is_last_step\": false, \"remaining_steps\": 20}", "metadata": "{\"langgraph_step\": 5, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\"}", "mlflow.spanType": "\"CHAIN\""}, "events": [{"time_unix_nano": 1749854169569101, "name": "exception", "attributes": {"exception.message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "exception.type": "APIStatusError", "exception.stacktrace": "Traceback (most recent call last):\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/utils/runnable.py\", line 676, in ainvoke\n    input = await step.ainvoke(input, config, **kwargs)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/utils/runnable.py\", line 433, in ainvoke\n    ret = await coro\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/prebuilt/chat_agent_executor.py\", line 523, in acall_model\n    response = cast(AIMessage, await model_runnable.ainvoke(state, config))\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 3089, in ainvoke\n    input_ = await coro_with_context(part(), context, create_task=True)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 5444, in ainvoke\n    return await self.bound.ainvoke(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 394, in ainvoke\n    llm_result = await self.agenerate_prompt(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 968, in agenerate_prompt\n    return await self.agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 926, in agenerate\n    raise exceptions[0]\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 1094, in _agenerate_with_cache\n    result = await self._agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_groq/chat_models.py\", line 519, in _agenerate\n    response = await self.async_client.create(messages=message_dicts, **params)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/resources/chat/completions.py\", line 750, in create\n    return await self._post(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1716, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1537, in request\n    raise self._make_status_error_from_response(err.response) from None\ngroq.APIStatusError: Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}"}}], "status": {"message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "code": "STATUS_CODE_ERROR"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "lnE6eCFbUUw=", "trace_state": "", "parent_span_id": "+s2VBSUy9AI=", "name": "call_model_3", "start_time_unix_nano": 1749854169319844000, "end_time_unix_nano": 1749854169568076000, "attributes": {"mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}], \"is_last_step\": false, \"remaining_steps\": 20}", "metadata": "{\"langgraph_step\": 5, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\"}", "mlflow.spanType": "\"CHAIN\""}, "events": [{"time_unix_nano": 1749854169568032, "name": "exception", "attributes": {"exception.message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "exception.type": "APIStatusError", "exception.stacktrace": "Traceback (most recent call last):\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/utils/runnable.py\", line 433, in ainvoke\n    ret = await coro\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langgraph/prebuilt/chat_agent_executor.py\", line 523, in acall_model\n    response = cast(AIMessage, await model_runnable.ainvoke(state, config))\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 3089, in ainvoke\n    input_ = await coro_with_context(part(), context, create_task=True)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 5444, in ainvoke\n    return await self.bound.ainvoke(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 394, in ainvoke\n    llm_result = await self.agenerate_prompt(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 968, in agenerate_prompt\n    return await self.agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 926, in agenerate\n    raise exceptions[0]\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 1094, in _agenerate_with_cache\n    result = await self._agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_groq/chat_models.py\", line 519, in _agenerate\n    response = await self.async_client.create(messages=message_dicts, **params)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/resources/chat/completions.py\", line 750, in create\n    return await self._post(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1716, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1537, in request\n    raise self._make_status_error_from_response(err.response) from None\ngroq.APIStatusError: Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}"}}], "status": {"message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "code": "STATUS_CODE_ERROR"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "+h2Xaw+SvDA=", "trace_state": "", "parent_span_id": "+s2VBSUy9AI=", "name": "RunnableSequence_3", "start_time_unix_nano": 1749854169322763000, "end_time_unix_nano": 1749854169566305000, "attributes": {"mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}], \"is_last_step\": false, \"remaining_steps\": 20}", "metadata": "{\"langgraph_step\": 5, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\", \"checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\"}", "mlflow.spanType": "\"CHAIN\""}, "events": [{"time_unix_nano": 1749854169566247, "name": "exception", "attributes": {"exception.message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "exception.type": "APIStatusError", "exception.stacktrace": "Traceback (most recent call last):\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 3089, in ainvoke\n    input_ = await coro_with_context(part(), context, create_task=True)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/runnables/base.py\", line 5444, in ainvoke\n    return await self.bound.ainvoke(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 394, in ainvoke\n    llm_result = await self.agenerate_prompt(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 968, in agenerate_prompt\n    return await self.agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 926, in agenerate\n    raise exceptions[0]\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 1094, in _agenerate_with_cache\n    result = await self._agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_groq/chat_models.py\", line 519, in _agenerate\n    response = await self.async_client.create(messages=message_dicts, **params)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/resources/chat/completions.py\", line 750, in create\n    return await self._post(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1716, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1537, in request\n    raise self._make_status_error_from_response(err.response) from None\ngroq.APIStatusError: Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}"}}], "status": {"message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "code": "STATUS_CODE_ERROR"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "S5P/U3dlRyw=", "trace_state": "", "parent_span_id": "+h2Xaw+SvDA=", "name": "Prompt_3", "start_time_unix_nano": 1749854169324327000, "end_time_unix_nano": 1749854169326504000, "attributes": {"mlflow.spanOutputs": "[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}], \"is_last_step\": false, \"remaining_steps\": 20}", "metadata": "{\"langgraph_step\": 5, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\", \"checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\"}", "mlflow.spanType": "\"CHAIN\""}, "status": {"message": "", "code": "STATUS_CODE_OK"}}, {"trace_id": "fHzVqE7z4V3RVt+8l8RflA==", "span_id": "k8WUg4WRW/g=", "trace_state": "", "parent_span_id": "+h2Xaw+SvDA=", "name": "ChatGroq_3", "start_time_unix_nano": 1749854169330714000, "end_time_unix_nano": 1749854169563500000, "attributes": {"options": "{\"stop\": null}", "metadata": "{\"langgraph_step\": 5, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"branch:to:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\", \"checkpoint_ns\": \"agent:74c7d64e-3242-b0e9-1f87-ffaa94ff3dc6\", \"ls_provider\": \"groq\", \"ls_model_name\": \"qwen/qwen3-32b\", \"ls_model_type\": \"chat\", \"ls_temperature\": 0.6, \"ls_max_tokens\": 4096}", "mlflow.spanInputs": "[[{\"content\": \"fetch subjects of 2 unread emails\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"8832c754-1e98-4da5-b4fd-124578ac24b8\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"function\": {\"arguments\": \"{\\\"maxResults\\\":2,\\\"q\\\":\\\"is:unread\\\"}\", \"name\": \"list_messages\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 354, \"prompt_tokens\": 8774, \"total_tokens\": 9128, \"completion_time\": 0.938675395, \"prompt_time\": 0.392343412, \"queue_time\": 0.12158729899999998, \"total_time\": 1.331018807}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--78f8f0e9-5963-4b9e-9bdb-ac33bbc35ec3-0\", \"example\": false, \"tool_calls\": [{\"name\": \"list_messages\", \"args\": {\"maxResults\": 2, \"q\": \"is:unread\"}, \"id\": \"b7cjxgrz4\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8774, \"output_tokens\": 354, \"total_tokens\": 9128}}, {\"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"list_messages\", \"id\": \"e37b707e-f93a-477f-b4e0-14f1d8660c75\", \"tool_call_id\": \"b7cjxgrz4\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"wx6jmewxz\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}, {\"id\": \"8kz299ksp\", \"function\": {\"arguments\": \"{\\\"id\\\":\\\"19769d075eb03f2f\\\"}\", \"name\": \"get_message\"}, \"type\": \"function\"}]}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 365, \"prompt_tokens\": 8927, \"total_tokens\": 9292, \"completion_time\": 0.843803019, \"prompt_time\": 0.396234104, \"queue_time\": 0.12137764499999998, \"total_time\": 1.240037123}, \"model_name\": \"qwen/qwen3-32b\", \"system_fingerprint\": \"fp_8487b76fd3\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run--ba396722-1ca7-4b03-8886-78de8c627a65-0\", \"example\": false, \"tool_calls\": [{\"name\": \"get_message\", \"args\": {\"id\": \"1976b6930ae39214\"}, \"id\": \"wx6jmewxz\", \"type\": \"tool_call\"}, {\"name\": \"get_message\", \"args\": {\"id\": \"19769d075eb03f2f\"}, \"id\": \"8kz299ksp\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 8927, \"output_tokens\": 365, \"total_tokens\": 9292}}, {\"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"cdfb9eaf-bd05-4314-bf9a-f3fc934d5350\", \"tool_call_id\": \"wx6jmewxz\", \"artifact\": null, \"status\": \"success\"}, {\"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"tool\", \"name\": \"get_message\", \"id\": \"7bddc826-3185-4253-ba42-7d817e512a66\", \"tool_call_id\": \"8kz299ksp\", \"artifact\": null, \"status\": \"error\"}]]", "mlflow.traceRequestId": "\"80b0a58b950d4721ac0bee2955c2fefd\"", "invocation_params": "{\"_type\": \"groq-chat\", \"stop\": null, \"tools\": [{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"default\": 10, \"type\": \"integer\"}}, \"required\": [\"query\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"required\": [\"url\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of attendee email addresses\"}}, \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"type\": \"object\", \"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\", \"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"New event title\"}, \"description\": {\"type\": \"string\", \"description\": \"New event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"New start time\"}, \"endTime\": {\"type\": \"string\", \"description\": \"New end time\"}, \"attendees\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"New list of attendees\"}}}}, \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"type\": \"object\", \"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"name\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"enum\": [\"show\", \"hide\"], \"description\": \"The visibility of messages with this label in the message list\"}, \"labelListVisibility\": {\"type\": \"string\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"], \"description\": \"The visibility of the label in the label list\"}, \"color\": {\"type\": \"object\", \"properties\": {\"textColor\": {\"type\": \"string\", \"description\": \"The text color of the label as hex string\"}, \"backgroundColor\": {\"type\": \"string\", \"description\": \"The background color of the label as hex string\"}}, \"required\": [\"textColor\", \"backgroundColor\"], \"additionalProperties\": false, \"description\": \"The color settings for the label\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to delete\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"type\": \"object\", \"properties\": {\"ids\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"The IDs of the messages to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the messages\"}}, \"required\": [\"ids\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return messages with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the message\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the message\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"type\": \"object\", \"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of recipient email addresses\"}, \"cc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of CC recipient email addresses\"}, \"bcc\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of BCC recipient email addresses\"}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"type\": \"object\", \"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Only return threads with labels that match all of the specified label IDs\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to add to the thread\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"A list of label IDs to remove from the thread\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"], \"description\": \"The state in which messages should be left after being forwarded\"}}, \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"], \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\"}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"required\": [\"enabled\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"required\": [\"displayLanguage\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"accessWindow\": {\"type\": \"string\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"], \"description\": \"The range of messages which are accessible via POP\"}, \"disposition\": {\"type\": \"string\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"], \"description\": \"The action that will be executed on a message after it has been fetched via POP\"}}, \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"type\": \"object\", \"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"type\": \"object\", \"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"required\": [\"delegateEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"criteria\": {\"type\": \"object\", \"properties\": {\"from\": {\"type\": \"string\", \"description\": \"The sender's display name or email address\"}, \"to\": {\"type\": \"string\", \"description\": \"The recipient's display name or email address\"}, \"subject\": {\"type\": \"string\", \"description\": \"Case-insensitive phrase in the message's subject\"}, \"query\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies the filter's criteria\"}, \"negatedQuery\": {\"type\": \"string\", \"description\": \"A Gmail search query that specifies criteria the message must not match\"}, \"hasAttachment\": {\"type\": \"boolean\", \"description\": \"Whether the message has any attachment\"}, \"excludeChats\": {\"type\": \"boolean\", \"description\": \"Whether the response should exclude chats\"}, \"size\": {\"type\": \"number\", \"description\": \"The size of the entire RFC822 message in bytes\"}, \"sizeComparison\": {\"type\": \"string\", \"enum\": [\"smaller\", \"larger\"], \"description\": \"How the message size in bytes should be in relation to the size field\"}}, \"additionalProperties\": false, \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"properties\": {\"addLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to add to messages\"}, \"removeLabelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"List of labels to remove from messages\"}, \"forward\": {\"type\": \"string\", \"description\": \"Email address that the message should be forwarded to\"}}, \"additionalProperties\": false, \"description\": \"Actions to perform on messages matching the criteria\"}}, \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"type\": \"object\", \"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"required\": [\"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"type\": \"object\", \"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"required\": [\"forwardingEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"required\": [\"sendAsEmail\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"type\": \"object\", \"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"items\": {\"type\": \"string\"}, \"description\": \"Label IDs to restrict notifications to\"}, \"labelFilterAction\": {\"type\": \"string\", \"enum\": [\"include\", \"exclude\"], \"description\": \"Whether to include or exclude the specified labels\"}}, \"required\": [\"topicName\"], \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"type\": \"object\", \"properties\": {}, \"additionalProperties\": false, \"$schema\": \"http://json-schema.org/draft-07/schema#\"}}}]}", "mlflow.chat.messages": "[{\"role\": \"user\", \"content\": \"fetch subjects of 2 unread emails\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"b7cjxgrz4\", \"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"arguments\": \"{\\\"maxResults\\\": 2, \\\"q\\\": \\\"is:unread\\\"}\"}}]}, {\"role\": \"tool\", \"content\": \"{\\\"messages\\\":[{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\"},{\\\"id\\\":\\\"19769d075eb03f2f\\\",\\\"threadId\\\":\\\"19769d075eb03f2f\\\"}],\\\"nextPageToken\\\":\\\"01077369717003118433\\\",\\\"resultSizeEstimate\\\":201}\", \"tool_call_id\": \"b7cjxgrz4\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"wx6jmewxz\", \"type\": \"function\", \"function\": {\"name\": \"get_message\", \"arguments\": \"{\\\"id\\\": \\\"1976b6930ae39214\\\"}\"}}, {\"id\": \"8kz299ksp\", \"type\": \"function\", \"function\": {\"name\": \"get_message\", \"arguments\": \"{\\\"id\\\": \\\"19769d075eb03f2f\\\"}\"}}]}, {\"role\": \"tool\", \"content\": \"{\\\"id\\\":\\\"1976b6930ae39214\\\",\\\"threadId\\\":\\\"1976b6930ae39214\\\",\\\"labelIds\\\":[\\\"UNREAD\\\",\\\"CATEGORY_UPDATES\\\",\\\"INBOX\\\"],\\\"snippet\\\":\\\"Results based on search: ..................................................................................... JobLeads Log in New jobs for June 14, 2025 Results based on search: &#39;Dubai, Finance,\\\",\\\"payload\\\":{\\\"partId\\\":\\\"\\\",\\\"mimeType\\\":\\\"multipart/alternative\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[{\\\"name\\\":\\\"Message-ID\\\",\\\"value\\\":\\\"<684ca631.a70a0220.2f29ec.d772SMTPIN_ADDED_MISSING@mx.google.com>\\\"},{\\\"name\\\":\\\"Date\\\",\\\"value\\\":\\\"Sat, 14 Jun 2025 00:28:50 +0200\\\"},{\\\"name\\\":\\\"From\\\",\\\"value\\\":\\\"JobLeads <mailer@jobleads.com>\\\"},{\\\"name\\\":\\\"To\\\",\\\"value\\\":\\\"harsh <h67dabhi@gmail.com>\\\"},{\\\"name\\\":\\\"Subject\\\",\\\"value\\\":\\\"2 new jobs match your job search\\\"}],\\\"body\\\":{\\\"size\\\":0},\\\"parts\\\":[{\\\"partId\\\":\\\"0\\\",\\\"mimeType\\\":\\\"text/plain\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"data\\\":\\\"Hello harsh,New jobs for March 28, 2024\\\\nResults based on search:\\\\nMost relevant and most recently posted jobs are shown on top. For each job search, we send you a job only once.\\\\n\\\\n\\\\n\\\\nDirector - Model Audit\\\\nGridlines\\\\nDubai\\\\nAED 300,000 - 450,000\\\\nJune 8, 2025\\\\n\\\\nChief Accounting Officer - Gulf Countries\\\\nSchneider Electric Norge AS\\\\nDubai\\\\nAED 500,000 - 700,000\\\\nJune 6, 2025\\\\n\\\\n\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nFor more resume and job search tips, connect with us!\\\\nhttps://www.instagram.com/jobleadscom/\\\\nhttps://www.youtube.com/channel/UCD-tDcD6v8Fr7ag0BOIRTyA\\\\nhttps://www.facebook.com/JobLeads/\\\\nhttps://www.linkedin.com/company/jobleads-gmbh/\\\\n\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\nHaving problems logging in? Click here.\\\\nhttps://www.jobleads.com/forgot-password?utm_source=&utm_medium=email-footer&utm_campaign=password-reminder\\\\n\\\\nDo you have questions or need help? Please check out our Help Center.\\\\nhttps://support.jobleads.com?utm_source=&utm_medium=email-footer&utm_campaign=customer-service\\\\n\\\\nYou are getting this email because you are registered as a member of JobLeads. If you do not wish to receive emails anymore, please unsubscribe.\\\\nhttps://www.jobleads.com/manage-email-notifications?kuuid=&utm_source=&utm_medium=email-footer&utm_campaign=optout\\\\n\\\\n-----------------------------------------------------------------------------------------------\\\\n\\\\n(c) JobLeads GmbH | Brandstwiete 4 | 20457 Hamburg, Germany\\\\nCommercial Register: District Court of Hamburg - HRB 101441\\\\nManaging Directors: Christian von Ahlen, Jan Hendrik von Ahlen, Martin Schmidt\\\",\\\"size\\\":2228}},{\\\"partId\\\":\\\"1\\\",\\\"mimeType\\\":\\\"text/html\\\",\\\"filename\\\":\\\"\\\",\\\"headers\\\":[],\\\"body\\\":{\\\"size\\\":57807,\\\"data\\\":\\\"\\\"}}]},\\\"sizeEstimate\\\":86428,\\\"historyId\\\":\\\"1413082\\\",\\\"internalDate\\\":\\\"1749853730000\\\"}\", \"tool_call_id\": \"wx6jmewxz\"}, {\"role\": \"tool\", \"content\": \"Error: ExceptionGroup('unhandled errors in a TaskGroup', [ExceptionGroup('unhandled errors in a TaskGroup', [McpError('Connection closed')])])\\n Please fix your mistakes.\", \"tool_call_id\": \"8kz299ksp\"}]", "batch_size": "1", "mlflow.chat.tools": "[{\"type\": \"function\", \"function\": {\"name\": \"search\", \"description\": \"\\n    Search DuckDuckGo and return formatted results.\\n\\n    Args:\\n        query: The search query string\\n        max_results: Maximum number of results to return (default: 10)\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"query\": {\"type\": \"string\"}, \"max_results\": {\"type\": \"integer\"}}, \"type\": \"object\", \"required\": [\"query\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"fetch_content\", \"description\": \"\\n    Fetch and parse content from a webpage URL.\\n\\n    Args:\\n        url: The webpage URL to fetch content from\\n        ctx: MCP context for logging\\n    \", \"parameters\": {\"properties\": {\"url\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"url\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_event\", \"description\": \"Create a new Google Calendar event\", \"parameters\": {\"properties\": {\"summary\": {\"type\": \"string\", \"description\": \"Event title\"}, \"description\": {\"type\": \"string\", \"description\": \"Event description\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Event start time (ISO format)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"Event end time (ISO format)\"}, \"attendees\": {\"type\": \"array\", \"description\": \"List of attendee email addresses\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"summary\", \"startTime\", \"endTime\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_events\", \"description\": \"List Google Calendar events\", \"parameters\": {\"properties\": {\"timeMin\": {\"type\": \"string\", \"description\": \"Start time (ISO format)\"}, \"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of results\"}}, \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_event\", \"description\": \"Update an existing Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to update\"}, \"updates\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"eventId\", \"updates\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_event\", \"description\": \"Delete a Google Calendar event\", \"parameters\": {\"properties\": {\"eventId\": {\"type\": \"string\", \"description\": \"ID of the event to delete\"}}, \"type\": \"object\", \"required\": [\"eventId\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_draft\", \"description\": \"Create a draft email in Gmail. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this draft with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_draft\", \"description\": \"Delete a draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_draft\", \"description\": \"Get a specific draft by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_drafts\", \"description\": \"List drafts in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of drafts to return. Accepts values between 1-500\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return drafts matching the specified query. Supports the same query format as the Gmail search box\"}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include drafts from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_draft\", \"description\": \"Send an existing draft\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the draft to send\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_label\", \"description\": \"Create a new label\", \"parameters\": {\"properties\": {\"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"name\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_label\", \"description\": \"Delete a label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_label\", \"description\": \"Get a specific label by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to retrieve\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_labels\", \"description\": \"List all labels in the user's mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_label\", \"description\": \"Patch an existing label (partial update)\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to patch\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_label\", \"description\": \"Update an existing label\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the label to update\"}, \"name\": {\"type\": \"string\", \"description\": \"The display name of the label\"}, \"messageListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of messages with this label in the message list\", \"enum\": [\"show\", \"hide\"]}, \"labelListVisibility\": {\"type\": \"string\", \"description\": \"The visibility of the label in the label list\", \"enum\": [\"labelShow\", \"labelShowIfUnread\", \"labelHide\"]}, \"color\": {\"type\": \"object\", \"description\": \"The color settings for the label\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_delete_messages\", \"description\": \"Delete multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to delete\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"batch_modify_messages\", \"description\": \"Modify the labels on multiple messages\", \"parameters\": {\"properties\": {\"ids\": {\"type\": \"array\", \"description\": \"The IDs of the messages to modify\", \"items\": {\"type\": \"string\"}}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the messages\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the messages\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"ids\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_message\", \"description\": \"Immediately and permanently delete a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_message\", \"description\": \"Get a specific message by ID with format options\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_messages\", \"description\": \"List messages in the user's mailbox with optional filtering\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of messages to return. Accepts values between 1-500\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return messages matching the specified query. Supports the same query format as the Gmail search box\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return messages with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include messages from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_message\", \"description\": \"Modify the labels on a message\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the message\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the message\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"send_message\", \"description\": \"Send an email message to specified recipients. Note the mechanics of the raw parameter.\", \"parameters\": {\"properties\": {\"raw\": {\"type\": \"string\", \"description\": \"The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided\"}, \"threadId\": {\"type\": \"string\", \"description\": \"The thread ID to associate this message with\"}, \"to\": {\"type\": \"array\", \"description\": \"List of recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"cc\": {\"type\": \"array\", \"description\": \"List of CC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"bcc\": {\"type\": \"array\", \"description\": \"List of BCC recipient email addresses\", \"items\": {\"type\": \"string\"}}, \"subject\": {\"type\": \"string\", \"description\": \"The subject of the email\"}, \"body\": {\"type\": \"string\", \"description\": \"The body of the email\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_message\", \"description\": \"Move a message to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_message\", \"description\": \"Remove a message from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the message to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_attachment\", \"description\": \"Get a message attachment\", \"parameters\": {\"properties\": {\"messageId\": {\"type\": \"string\", \"description\": \"ID of the message containing the attachment\"}, \"id\": {\"type\": \"string\", \"description\": \"The ID of the attachment\"}}, \"type\": \"object\", \"required\": [\"messageId\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_thread\", \"description\": \"Delete a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to delete\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_thread\", \"description\": \"Get a specific thread by ID\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to retrieve\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_threads\", \"description\": \"List threads in the user's mailbox\", \"parameters\": {\"properties\": {\"maxResults\": {\"type\": \"number\", \"description\": \"Maximum number of threads to return\"}, \"pageToken\": {\"type\": \"string\", \"description\": \"Page token to retrieve a specific page of results\"}, \"q\": {\"type\": \"string\", \"description\": \"Only return threads matching the specified query\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Only return threads with labels that match all of the specified label IDs\", \"items\": {\"type\": \"string\"}}, \"includeSpamTrash\": {\"type\": \"boolean\", \"description\": \"Include threads from SPAM and TRASH in the results\"}, \"includeBodyHtml\": {\"type\": \"boolean\", \"description\": \"Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large\"}}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"modify_thread\", \"description\": \"Modify the labels applied to a thread\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to modify\"}, \"addLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to add to the thread\", \"items\": {\"type\": \"string\"}}, \"removeLabelIds\": {\"type\": \"array\", \"description\": \"A list of label IDs to remove from the thread\", \"items\": {\"type\": \"string\"}}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"trash_thread\", \"description\": \"Move a thread to the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to move to trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"untrash_thread\", \"description\": \"Remove a thread from the trash\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the thread to remove from trash\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_auto_forwarding\", \"description\": \"Gets auto-forwarding settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_imap\", \"description\": \"Gets IMAP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_language\", \"description\": \"Gets language settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_pop\", \"description\": \"Gets POP settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_vacation\", \"description\": \"Get vacation responder settings\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_auto_forwarding\", \"description\": \"Updates automatic forwarding settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether all incoming mail is automatically forwarded to another address\"}, \"emailAddress\": {\"type\": \"string\", \"description\": \"Email address to which messages should be automatically forwarded\"}, \"disposition\": {\"type\": \"string\", \"description\": \"The state in which messages should be left after being forwarded\", \"enum\": [\"leaveInInbox\", \"archive\", \"trash\", \"markRead\"]}}, \"type\": \"object\", \"required\": [\"enabled\", \"emailAddress\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_imap\", \"description\": \"Updates IMAP settings\", \"parameters\": {\"properties\": {\"enabled\": {\"type\": \"boolean\", \"description\": \"Whether IMAP is enabled for the account\"}, \"expungeBehavior\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder\", \"enum\": [\"archive\", \"trash\", \"deleteForever\"]}, \"maxFolderSize\": {\"type\": \"number\", \"description\": \"An optional limit on the number of messages that can be accessed through IMAP\"}}, \"type\": \"object\", \"required\": [\"enabled\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_language\", \"description\": \"Updates language settings\", \"parameters\": {\"properties\": {\"displayLanguage\": {\"type\": \"string\", \"description\": \"The language to display Gmail in, formatted as an RFC 3066 Language Tag\"}}, \"type\": \"object\", \"required\": [\"displayLanguage\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_pop\", \"description\": \"Updates POP settings\", \"parameters\": {\"properties\": {\"accessWindow\": {\"type\": \"string\", \"description\": \"The range of messages which are accessible via POP\", \"enum\": [\"disabled\", \"allMail\", \"fromNowOn\"]}, \"disposition\": {\"type\": \"string\", \"description\": \"The action that will be executed on a message after it has been fetched via POP\", \"enum\": [\"archive\", \"trash\", \"leaveInInbox\"]}}, \"type\": \"object\", \"required\": [\"accessWindow\", \"disposition\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_vacation\", \"description\": \"Update vacation responder settings\", \"parameters\": {\"properties\": {\"enableAutoReply\": {\"type\": \"boolean\", \"description\": \"Whether the vacation responder is enabled\"}, \"responseSubject\": {\"type\": \"string\", \"description\": \"Optional subject line for the vacation responder auto-reply\"}, \"responseBodyPlainText\": {\"type\": \"string\", \"description\": \"Response body in plain text format\"}, \"restrictToContacts\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to contacts\"}, \"restrictToDomain\": {\"type\": \"boolean\", \"description\": \"Whether responses are only sent to users in the same domain\"}, \"startTime\": {\"type\": \"string\", \"description\": \"Start time for sending auto-replies (epoch ms)\"}, \"endTime\": {\"type\": \"string\", \"description\": \"End time for sending auto-replies (epoch ms)\"}}, \"type\": \"object\", \"required\": [\"enableAutoReply\", \"responseBodyPlainText\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"add_delegate\", \"description\": \"Adds a delegate to the specified account\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to add\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"remove_delegate\", \"description\": \"Removes the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"Email address of delegate to remove\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_delegate\", \"description\": \"Gets the specified delegate\", \"parameters\": {\"properties\": {\"delegateEmail\": {\"type\": \"string\", \"description\": \"The email address of the delegate to retrieve\"}}, \"type\": \"object\", \"required\": [\"delegateEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_delegates\", \"description\": \"Lists the delegates for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_filter\", \"description\": \"Creates a filter\", \"parameters\": {\"properties\": {\"criteria\": {\"type\": \"object\", \"description\": \"Filter criteria\"}, \"action\": {\"type\": \"object\", \"description\": \"Actions to perform on messages matching the criteria\"}}, \"type\": \"object\", \"required\": [\"criteria\", \"action\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_filter\", \"description\": \"Deletes a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be deleted\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_filter\", \"description\": \"Gets a filter\", \"parameters\": {\"properties\": {\"id\": {\"type\": \"string\", \"description\": \"The ID of the filter to be fetched\"}}, \"type\": \"object\", \"required\": [\"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_filters\", \"description\": \"Lists the message filters of a Gmail user\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_forwarding_address\", \"description\": \"Creates a forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"An email address to which messages can be forwarded\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_forwarding_address\", \"description\": \"Deletes the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be deleted\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_forwarding_address\", \"description\": \"Gets the specified forwarding address\", \"parameters\": {\"properties\": {\"forwardingEmail\": {\"type\": \"string\", \"description\": \"The forwarding address to be retrieved\"}}, \"type\": \"object\", \"required\": [\"forwardingEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_forwarding_addresses\", \"description\": \"Lists the forwarding addresses for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"create_send_as\", \"description\": \"Creates a custom send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_send_as\", \"description\": \"Deletes the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be deleted\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_send_as\", \"description\": \"Gets the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be retrieved\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_send_as\", \"description\": \"Lists the send-as aliases for the specified account\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"patch_send_as\", \"description\": \"Patches the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"update_send_as\", \"description\": \"Updates a send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be updated\"}, \"displayName\": {\"type\": \"string\", \"description\": \"A name that appears in the 'From:' header\"}, \"replyToAddress\": {\"type\": \"string\", \"description\": \"An optional email address that is included in a 'Reply-To:' header\"}, \"signature\": {\"type\": \"string\", \"description\": \"An optional HTML signature\"}, \"isPrimary\": {\"type\": \"boolean\", \"description\": \"Whether this address is the primary address\"}, \"treatAsAlias\": {\"type\": \"boolean\", \"description\": \"Whether Gmail should treat this address as an alias\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"verify_send_as\", \"description\": \"Sends a verification email to the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The send-as alias to be verified\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"delete_smime_info\", \"description\": \"Deletes the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_smime_info\", \"description\": \"Gets the specified S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"insert_smime_info\", \"description\": \"Insert (upload) the given S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"encryptedKeyPassword\": {\"type\": \"string\", \"description\": \"Encrypted key password\"}, \"pkcs12\": {\"type\": \"string\", \"description\": \"PKCS#12 format containing a single private/public key pair and certificate chain\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"encryptedKeyPassword\", \"pkcs12\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"list_smime_info\", \"description\": \"Lists S/MIME configs for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"set_default_smime_info\", \"description\": \"Sets the default S/MIME config for the specified send-as alias\", \"parameters\": {\"properties\": {\"sendAsEmail\": {\"type\": \"string\", \"description\": \"The email address that appears in the 'From:' header\"}, \"id\": {\"type\": \"string\", \"description\": \"The immutable ID for the S/MIME config\"}}, \"type\": \"object\", \"required\": [\"sendAsEmail\", \"id\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"get_profile\", \"description\": \"Get the current user's Gmail profile\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"watch_mailbox\", \"description\": \"Watch for changes to the user's mailbox\", \"parameters\": {\"properties\": {\"topicName\": {\"type\": \"string\", \"description\": \"The name of the Cloud Pub/Sub topic to publish notifications to\"}, \"labelIds\": {\"type\": \"array\", \"description\": \"Label IDs to restrict notifications to\", \"items\": {\"type\": \"string\"}}, \"labelFilterAction\": {\"type\": \"string\", \"description\": \"Whether to include or exclude the specified labels\", \"enum\": [\"include\", \"exclude\"]}}, \"type\": \"object\", \"required\": [\"topicName\"], \"additionalProperties\": false}}}, {\"type\": \"function\", \"function\": {\"name\": \"stop_mail_watch\", \"description\": \"Stop receiving push notifications for the given user mailbox\", \"parameters\": {\"properties\": {}, \"type\": \"object\", \"additionalProperties\": false}}}]", "mlflow.spanType": "\"CHAT_MODEL\""}, "events": [{"time_unix_nano": 1749854169563423, "name": "exception", "attributes": {"exception.message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "exception.type": "APIStatusError", "exception.stacktrace": "Traceback (most recent call last):\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_core/language_models/chat_models.py\", line 1094, in _agenerate_with_cache\n    result = await self._agenerate(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/langchain_groq/chat_models.py\", line 519, in _agenerate\n    response = await self.async_client.create(messages=message_dicts, **params)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/resources/chat/completions.py\", line 750, in create\n    return await self._post(\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1716, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/Users/phoenixonwork/Documents/coding/projects/mcp_project/.venv/lib/python3.10/site-packages/groq/_base_client.py\", line 1537, in request\n    raise self._make_status_error_from_response(err.response) from None\ngroq.APIStatusError: Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}"}}], "status": {"message": "Error code: 413 - {'error': {'message': 'Request too large for model `qwen/qwen3-32b` in organization `org_01jw6drh3cfans1nzp46xnd90h` service tier `on_demand` on tokens per minute (TPM): Limit 6000, Requested 20080, please reduce your message size and try again. Need more tokens? Upgrade to Dev Tier today at https://console.groq.com/settings/billing', 'type': 'tokens', 'code': 'rate_limit_exceeded'}}", "code": "STATUS_CODE_ERROR"}}]}